{
	"name": "df_derived_column",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"linkedService": {
						"referenceName": "ls_for_ADLS_for_input",
						"type": "LinkedServiceReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"linkedService": {
						"referenceName": "ls_for_ADLS_for_input",
						"type": "LinkedServiceReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "derivedColumn1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          EmployeeNO as integer,",
				"          ENAME as string,",
				"          JOB as string,",
				"          MGR as integer,",
				"          HIREDATE as date,",
				"          SAL as decimal(19,4),",
				"          COMM as decimal(19,4),",
				"          DepartmentNO as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'parquet',",
				"     fileSystem: 'datafile',",
				"     folderPath: 'input',",
				"     fileName: 'employee.parquet') ~> source1",
				"source1 derive(GrossSalary = iif(isNull(COMM),SAL, SAL+COMM)) ~> derivedColumn1",
				"derivedColumn1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'parquet',",
				"     fileSystem: 'datafile',",
				"     folderPath: 'output/derived_addcol',",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> sink1"
			]
		}
	}
}